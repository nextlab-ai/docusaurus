"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6031],{8838:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>f,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Features/EndtoEndTests/iPerf3","title":"iPerf3","description":"The iPerf3 feature enables users to measure network bandwidth capacity between two points","source":"@site/docs/02_Features/03_EndtoEndTests/01_iPerf3.md","sourceDirName":"02_Features/03_EndtoEndTests","slug":"/Features/EndtoEndTests/iPerf3","permalink":"/docs/Features/EndtoEndTests/iPerf3","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"netmeterSidebar","previous":{"title":"End to End Tests","permalink":"/docs/category/end-to-end-tests"},"next":{"title":"TWAMP","permalink":"/docs/Features/EndtoEndTests/TWAMP"}}');var s=n(4848),r=n(8453);const o=n.p+"assets/images/iPerf3Client-bcdeb4782577164c539e61998ff3b8d1.png",a=n.p+"assets/images/iPerf3Server-dfd1f676e6cda984d9121deaa040687f.png",d={sidebar_position:1},l="iPerf3",h={},c=[{value:"iPerf3 : Client Mode",id:"iperf3--client-mode",level:2},{value:"Destination",id:"destination",level:3},{value:"\u26a0\ufe0eUsing TCP protocol",id:"\ufe0eusing-tcp-protocol",level:4},{value:"Transmit Settings",id:"transmit-settings",level:3},{value:"Statistics",id:"statistics",level:3},{value:"Log",id:"log",level:3},{value:"iPerf3 : Server Mode",id:"iperf3--server-mode",level:2},{value:"Listening Port",id:"listening-port",level:3},{value:"Statistics",id:"statistics-1",level:3},{value:"Log",id:"log-1",level:3},{value:"Results History",id:"results-history",level:2},{value:"<strong>\u26a0\ufe0eNotice:</strong> iPerf3 Server Mode does not register measurement history.",id:"\ufe0enotice-iperf3-server-mode-does-not-register-measurement-history",level:4}];function u(e){const t={h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"iperf3",children:"iPerf3"})}),"\n",(0,s.jsx)(t.p,{children:"The iPerf3 feature enables users to measure network bandwidth capacity between two points\non the network according to their needs."}),"\n",(0,s.jsx)(t.p,{children:"netMeter can function as both the client and server in iPerf3.\nUsers can conduct iPerf3 network measurements using netMeter by setting the destination to a pre-configured\niPerf3 server or by using netMeter to set up an iPerf3 server at a low cost within their network infrastructure."}),"\n",(0,s.jsx)(t.h2,{id:"iperf3--client-mode",children:"iPerf3 : Client Mode"}),"\n","\n",(0,s.jsx)("img",{src:o,style:{width:380}}),"\n",(0,s.jsx)(t.h3,{id:"destination",children:"Destination"}),"\n",(0,s.jsx)(t.p,{children:"Specify the destination IP address and port of the iPerf3 server. The commonly known port for an iPerf3 server is\n5201 but can be adjusted according to network conditions and the iPerf3 server's configuration."}),"\n",(0,s.jsx)(t.p,{children:"The protocol configuration for iPerf3 is set to default as UDP."}),"\n",(0,s.jsx)(t.h4,{id:"\ufe0eusing-tcp-protocol",children:"\u26a0\ufe0eUsing TCP protocol"}),"\n",(0,s.jsx)(t.p,{children:"Since the TCP protocol is designed to ensure data delivery without loss, loss and jitter statistics will\nonly be available when using the UDP protocol."}),"\n",(0,s.jsx)(t.p,{children:"When the UDP option is turned off (using TCP) in iPerf3, the initial 2 seconds of data will be automatically\nexcluded from the measurement. This is done to mitigate any potential outliers caused by the\nTCP window scaling negotiation and slow-start mechanisms."}),"\n",(0,s.jsx)(t.h3,{id:"transmit-settings",children:"Transmit Settings"}),"\n",(0,s.jsx)(t.p,{children:"iPerf3 support measurement of both Upload and Download."}),"\n",(0,s.jsx)(t.p,{children:"Users can configure the transmit unit based on either test duration or test size."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test Duration:"})," Specify the duration for which the test should run, allowing users to measure network performance\nover a specific time period."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test Size:"})," Define the amount of data to be transferred during the test, enabling users to conduct measurements\nbased on a predetermined amount of data."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"statistics",children:"Statistics"}),"\n",(0,s.jsx)(t.p,{children:"View detailed statistics generated from the iPerf3 measurements, including:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Total Transferred Packet Size:"})," The total size of data packets transferred during the iPerf3 test."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Bandwidth (Average):"})," The average bandwidth achieved during the iPerf3 test."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Standard Deviation of Bandwidth:"}),"  Measure of dispersion or variability in the achieved bandwidth values\naround the average bandwidth. A lower standard deviation indicates more consistent bandwidth values throughout the test,\nreflecting stable network performance."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Maximum Bandwidth:"})," The highest bandwidth achieved during the iPerf3 test."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Loss:"})," The percentage of data packets lost during transmission. This statistic is only available\nwhen using the UDP protocol."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Jitter:"})," The variation in the delay of packet arrival times, reflecting the consistency of network performance.\nThis statistic is only available when using the UDP protocol."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'Pressing the "Reset" button will reset the statistics and begin recalculating them from the moment it is pressed.\nThis action does not affect the statistics that will be uploaded and displayed in the results history.'}),"\n",(0,s.jsx)(t.h3,{id:"log",children:"Log"}),"\n",(0,s.jsx)(t.p,{children:'Log lines will be displayed in real-time, containing detailed information about ongoing iPerf3 measurements.\nPressing the "Clear" button will clear the loglines.'}),"\n",(0,s.jsx)(t.h2,{id:"iperf3--server-mode",children:"iPerf3 : Server Mode"}),"\n","\n",(0,s.jsx)("img",{src:a,style:{width:380}}),"\n",(0,s.jsx)(t.h3,{id:"listening-port",children:"Listening Port"}),"\n",(0,s.jsx)(t.p,{children:"Specify the port number on which the iPerf3 server will listen for incoming iPerf3 test request."}),"\n",(0,s.jsx)(t.p,{children:"The default port for iPerf3 Server is set to 5201."}),"\n",(0,s.jsx)(t.p,{children:'Can be adjusted according to iPerf3 configuration of the "Client" device or network conditions.'}),"\n",(0,s.jsx)(t.p,{children:"When the user initiates the test, netMeter will start as an iPerf3 server. The IP address and port of the netMeter\nwill be displayed on the button. This information can be used as the destination for iPerf3 clients."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Handle one client connection then exit"})}),"\n",(0,s.jsx)(t.p,{children:"When this option is enabled, the server will terminate the test session after completing the transmission with the\nfirst connected client."}),"\n",(0,s.jsx)(t.p,{children:"This feature is useful for scenarios where the server needs to serve multiple clients sequentially, ensuring that\nresources are efficiently managed and released after each connection."}),"\n",(0,s.jsx)(t.p,{children:"Users will need to manually start the iPerf3 Server after the session ends."}),"\n",(0,s.jsx)(t.h3,{id:"statistics-1",children:"Statistics"}),"\n",(0,s.jsx)(t.p,{children:"Since iPerf3 supports both download and upload measurements, statistics are provided for both Received (Rx) and\nTransmitted (Tx) data."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Total:"})," The total size of data packets transferred during the iPerf3 test."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Bandwidth:"})," The average bandwidth achieved during the iPerf3 test."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Standard Deviation of Bandwidth:"})," A measure of dispersion or variability in the achieved bandwidth values around\nthe average bandwidth. A lower standard deviation indicates more consistent bandwidth values throughout the test,\nreflecting stable network performance."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Maximum Bandwidth:"})," The highest bandwidth achieved during the iPerf3 test."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'Pressing the "Reset" button will reset the statistics and begin recalculating them from the moment it is pressed.'}),"\n",(0,s.jsx)(t.h3,{id:"log-1",children:"Log"}),"\n",(0,s.jsx)(t.p,{children:'Log lines will be displayed in real-time, containing detailed information about ongoing iPerf3 measurements.\nPressing the "Clear" button will clear the log lines.'}),"\n",(0,s.jsx)(t.h2,{id:"results-history",children:"Results History"}),"\n",(0,s.jsxs)(t.h4,{id:"\ufe0enotice-iperf3-server-mode-does-not-register-measurement-history",children:[(0,s.jsx)(t.strong,{children:"\u26a0\ufe0eNotice:"})," iPerf3 Server Mode does not register measurement history."]}),"\n",(0,s.jsx)(t.p,{children:"When the measurement is complete, netMeter automatically uploads the measurement results to the server.\nYou can access measurement records and details at any time through the 'Results' tab at the bottom of the screen."})]})}function f(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);